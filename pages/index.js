import Head from 'next/head';
import BlogList from '../components/blogList';
import Tabs from '../components/Tabs';
import Blog from '../models/Blog'
import connectDb from '../middleware/mongoose';
import Category from '../models/Category';
// import qs from 'qs';
import Pagination from '../components/Pagination';
import { useRouter } from 'next/router';
import Layout from '../components/Layout';
import Container from '../components/container';
import { NextSeo } from "next-seo";
import React from "react";
// import User from '../models/User'
// import { debounce } from '../utils';
// import { ObjectId } from 'mongodb';



const Home = ({ categories, blogs, page, pageCount }) => {
  const router = useRouter();

  // const { page, pageCount } = articles.pagination;

  // const handleSearch = (query: string) => {
  //     router.push(`/?search=${query}`);
  // };


  return (
    <Layout >
      <Head>
        <title>Blog Homepage</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="theme-color"
          content="#000"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NextSeo
        // title={`${siteConfig?.title}`}
        // description={siteConfig?.description || ""}
        // canonical={siteConfig?.url}
        openGraph={{
          //   url: siteConfig?.url,
          //   title: `${siteConfig?.title}`,
          //   description: siteConfig?.description || "",
          images: [
            {
              url: "",
              width: 800,
              height: 600,
              alt: ""
            }
          ],
          site_name: "blog"
        }}
        twitter={{
          cardType: "summary_large_image"
        }}
      />
      <Tabs
        categories={categories}
      // handleOnSearch={debounce(handleSearch, 500)}
      />
      <Container>
        {/* <div className="grid gap-10 lg:gap-10 md:grid-cols-2 ">
            <BlogList blogs={blogs} author={author} aspect="landscape"/>
            </div> */}

        <div className="grid gap-10 mt-10 lg:gap-10 md:grid-cols-2 lg:grid-cols-3 ">
          <BlogList blogs={blogs} aspect="landscape" />
        </div>
        {/* <Pagination page={page} pageCount={pageCount} /> */}
      </Container>
    </Layout>
  );
};


export async function getServerSideProps(context) {
  // await connectDb();

  
  // let categories = await Category.find().sort({createdAt: -1});
  const res = await fetch('https://blog-jcxn.vercel.app/api/getBlog');
  const data = await res.json();
  // const res = await fetch('http://localhost:3000/api/getCategory');
  // let blogs = await Blog.find().populate('user').populate('category').sort({createdAt: -1});
  // let page = context.query.page ? parseInt(context.query.page) : 1;
  // let blogs = await Blog.find().populate('user').populate('category').sort({createdAt: -1}).skip((page - 1) * 10).limit(10);
  // let totalPosts = await Blog.countDocuments();
  


  return {
    props: {
      // blogs: JSON.parse(JSON.stringify(blogs)),
      blogs: data.getBlogs,
      categories: data.categories
      // categories: JSON.parse(JSON.stringify(categories)),
      // pageCount: Math.ceil(totalPosts / 10),
      // page: page,
    },
  }
}

export default Home;

